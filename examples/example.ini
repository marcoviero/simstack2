;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Example parameter file for simstack code
;
; Contact: Marco Viero (marco.viero@caltech.edu)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[general]
;populations chooses how the catalog is split into groups with like-properties
binning = {"bin_in_lookback_time":"False", "bin_all_at_once":"True"}
error_estimator = {"bootstrap": "False", "emcee"="False"}

[io] ; Input/output
;output_folder will contain the directories: 
; - simstack_fluxes 
; - bootstrapped_fluxes
;If they don't exist the code will create them!
output_folder = PICKLESPATH simstack stacked_flux_densities
shortname = uVista__Laigle_v1.1__sf-qt_example

[catalog]
path = CATSPATH uVista
file = COSMOS2015_Laigle+_Simplified_v1.1.csv
;Catalog specific names for redshift, stellar mass, RA, and DEC
astrometry = {"ra":"ALPHA_J2000", "dec":"DELTA_J2000"}
classification = {"split_type":"labels", "redshift":{"id":"PHOTOZ", "bins":"[1.0, 1.5, 2.0, 3.0, 4.0]"}, "stellar_mass":{"id":"MASS_MED", "bins":"[8.5, 9.5, 10.5, 12.0]"}, "pops":{"id":"CLASS", "bins":2} }

[maps]
; True/False represents whether to stack them
; Maps need to be in Jy/beam.  If they are not, use second element in [beams] below to convert them.
; If fits file contains noisemap in second extension, has same name as signal map
spire_PLW  = {"stack":"True", "wavelength":500.0, "beam":{"fwhm":35.2,"area":1.0}, "color_correction":0.95615, "path_map": "./test_data/cosmos-uvista-hipe12_itermap_10_iterations_6.0_arcsec_pixels_PLW.signal.cutout.fits", "path_noise":"./test_data/cosmos-uvista-hipe12_itermap_10_iterations_6.0_arcsec_pixels_PLW.noise.cutout.fits"}
