;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Example parameter file for simstack code
;
; Contact: Marco Viero (marco.viero@caltech.edu)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[general]
;populations chooses how the catalog is split into groups with like-properties
binning = {"optimal":"False", "bin_in_lookback_time":"False", "bin_all_at_once":"False"}
error_estimator = {"bootstrap": "False", "initial_number":0, "number_of_iterations":2}

[cosmology] ; Cosmology - Planck15
omega_m = 0.3075
omega_l = 0.6910
omega_k = 0.0
h       = 0.6774

[io] ; Input/output
;output_folder will contain the directories: 
; - simstack_fluxes 
; - bootstrapped_fluxes
;If they don't exist the code will create them!
output_folder           = PICKLESPATH simstack stacked_flux_densities
flux_densities_filename = simstack_flux_densities
shortname               = uVista__Laigle_v1.1__sf-qt__z_bins_in_slices_test

[catalog]
path = CATSPATH \uVista
file = COSMOS2015_Laigle+_Simplified_v1.1.csv
;Catalog specific names for redshift, stellar mass, RA, and DEC
astrometry = {"ra":"ALPHA_J2000", "dec":"DELTA_J2000"}
classification = {"split_type":"labels", "redshift":{"id":"PHOTOZ", "bins":"[1.0, 1.5, 2.0, 3.0, 4.0]"}, "stellar_mass":{"id":"MASS_MED", "bins":"[8.5, 9.5, 10.5, 12.0]"}, "pops":{"id":"CLASS", "bins":2} }
;classification = {"split_type":"labels", "redshift":{"id":"PHOTOZ", "bins":"[0.01, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0]"}, "stellar_mass":{"id":"MASS_MED", "bins":"[8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 12.0]"}, "pops":{"id":"CLASS", "bins":2} }

[maps]
; True/False represents whether to stack them
; Maps need to be in Jy/beam.  If they are not, use second element in [beams] below to convert them.
; If fits file contains noisemap in second extension, has same name as signal map
spire_PLW  = {"stack":"True", "wavelength":500.0, "beam":{"fwhm":35.2,"area":1.0}, "color_correction":0.95615, "path_map": "./test_data/cosmos-uvista-hipe12_itermap_10_iterations_6.0_arcsec_pixels_PLW.signal.cutout.fits", "path_noise":"./test_data/cosmos-uvista-hipe12_itermap_10_iterations_6.0_arcsec_pixels_PLW.noise.cutout.fits"}
